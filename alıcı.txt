#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Servo.h>

int ch_width_0 = 0;
int ch_width_1 = 0;
int ch_width_2 = 0;
int ch_width_3 = 0;
int ch_width_4 = 0;

Servo ch0;
Servo ch1;
Servo ch2;
Servo ch3;
Servo ch4;

struct Signal {
  byte motor;
  byte servo1;
  byte servo2;
  byte servo3;
  byte servo4;
};

Signal data;

const uint64_t pipeIn = 0xE9E8F0F0E1LL;
RF24 radio(7, 8); // select CE,CSN pin

void ResetData()
{
  data.motor = 0;
  data.servo1 = 100; 
  data.servo2 = 100;
  data.servo3 = 40;
  data.servo4 = 145;
}

void setup()
{
  ch0.attach(10);
  ch1.attach(3);
  ch2.attach(4);
  ch3.attach(5);
  ch4.attach(6);

  ResetData();
  radio.begin();
  radio.openReadingPipe(1, pipeIn);

  radio.startListening();
  Serial.begin(9600);
}

unsigned long lastRecvTime = 0;
void recvData()
{
while ( radio.available() ) {
radio.read(&data, sizeof(Signal));
lastRecvTime = millis();   // receive the data | data alınıyor
}
}

/*void printData()
{
  Serial.print("motor: ");
  Serial.print(data.motor);
  Serial.print("\tsol kanat: ");
  Serial.print(map(data.servo1, 0, 255, 0, 180));
  Serial.print("\tsağ kanat: ");
  Serial.print(map(data.servo2, 0, 255, 0, 180));
  Serial.print("\tarka dik: ");
  Serial.print(map(data.servo3, 0, 255, 0, 180));
  Serial.print("\tarka yatay: ");
  Serial.println(map(data.servo4, 0, 255, 0, 180));
}*/

void loop()
{
  recvData();
  unsigned long now = millis();
  if ( now - lastRecvTime > 1000 ) {
  ResetData(); // Signal lost.. Reset data | Sinyal kayıpsa data resetleniyor
}

//  printData();

  ch_width_0 = map(data.motor, 0, 255, 1000, 2000);
  ch_width_1 = map(data.servo1, 0, 255, 142, 12);
  ch_width_2 = map(data.servo2, 0, 255, 142, 12);
  ch_width_3 = map(data.servo3, 0, 255, -10, 70);
  ch_width_4 = map(data.servo4, 0, 255, 190, 100);

  ch0.writeMicroseconds(ch_width_0);
  ch1.write(ch_width_1);
  ch2.write(ch_width_2);
  ch3.write(ch_width_3);
  ch4.write(ch_width_4);
}
